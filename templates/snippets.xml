<?xml version="1.0" encoding="UTF-8"?>
<snippets>
    <snippet abbrev="for-return">
        <description>Basic for-in-return statement</description>
        <code>for $item in ␣
return
    $item</code>
    </snippet>
    <snippet abbrev="let-return">
        <description>Basic let-return expression</description>
        <code>let $item := ␣
    return
        ␣</code>
    </snippet>
    <snippet abbrev="let-single">
        <description>Single let statement without return</description>
        <code>let $item := ␣</code>
    </snippet>
    <snippet abbrev="log">
        <description>util:log statement</description>
        <code>util:log("DEBUG", (␣))</code>
    </snippet>
    <snippet abbrev="fun">
        <description>Function declaration</description>
        <code>declare function ␣($param) {
    ␣
};</code>
    </snippet>
    <snippet abbrev="template-fun">
        <description>HTML templating function</description>
        <code>declare function ␣($node as node(), $model as map(*)) {
    ␣
};</code>
    </snippet>
    <snippet abbrev="import">
        <description>Module import</description>
        <code>import module namespace ␣="$uri" at "␣";</code>
    </snippet>
    <snippet abbrev="declare-ns">
        <description>Declare namespace</description>
        <code>declare namespace ␣="␣";</code>
    </snippet>
    <snippet abbrev="declare-option">
        <description>Serialization declaration</description>
        <code>declare option exist:serialize "␣";</code>
    </snippet>
    <snippet abbrev="html-output">
        <description>Option declaration for HTML5 output</description>
        <code>declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";

declare option output:method "html5";
declare option output:media-type "text/html";</code>
    </snippet>
    <snippet abbrev="if">
        <description>If-then-else statement</description>
        <code>if (␣) then
    ␣
else
    ␣</code>
    </snippet>
    <snippet abbrev="declare-var">
        <description>Variable declaration</description>
        <code>declare variable $var := ␣;</code>
    </snippet>
    <snippet abbrev="typeswitch">
        <description>Typeswitch statement</description>
        <code>typeswitch (␣)
        case element(␣) return
            ␣
        default return
            ␣</code>
    </snippet>
    <snippet abbrev="switch">
        <description>XQuery 3.0 switch statement</description>
        <code>switch (␣)
        case ␣ return ␣
        default return ␣</code>
    </snippet>
    <snippet abbrev="case">
        <description>Case clause in typeswitch or switch</description>
        <code>case element(␣) return</code>
    </snippet>
    <snippet abbrev="comment (for function)">
        <description>Insert an XQDoc comment for a function declaration</description>
        <code>(:~
 : ␣
 :)</code>
    </snippet>
    <snippet abbrev="json">
        <description>JSON namespace declaration</description>
        <code>declare namespace json="http://www.json.org";</code>
    </snippet>
    <snippet abbrev="tei">
        <description>TEI namespace declaration</description>
        <code>declare namespace tei="http://www.tei-c.org/ns/1.0";</code>
    </snippet>
</snippets>